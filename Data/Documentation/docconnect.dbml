Project "Docconnect Green Squad" {
  database_type: 'MySQL'
  Note: 'MentorMate University Team Project'
}
// V13

// `role`.`normalized_name` NOT NULL -> NULL
// `role`.`concurrency_stamp` NOT NULL -> NULL
// `user_role`.`id` pk -> (`user_id`, `role_id`) pk

// v12

Table "user_claim" {
  "id" Int [pk, not null, increment]
  "role_id" Int [not null]
  "claim_type" LongText [null]
  "claim_value" LongText [null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

  Note: "System Table"
}

Ref:"role"."id" < "user_claim"."role_id" [update: cascade, delete: cascade]

// v11

Table "speciality" {
  "id" Int [pk, not null, increment]
  "name" VarChar(255) [not null]
  "image_url" VarChar(2047) [not null, default: 'https://img.freepik.com/free-photo/asian-young-main-group-hospital-professional_1291-37.jpg?w=996&t=st=1690473556~exp=1690474156~hmac=301bdbc52496f28adad99d6e20e348f8d9dd9722fc6fe19a55adec9360da9afd']
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

  Note: "Contains speciality name and it's image URL"
}

Table "specialist" {
  "doctor_id" Int [not null]
  "speciality_id" Int [not null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]
  
  Note: "Contains doctor's speciality link"

  Indexes {
  (doctor_id, speciality_id) [pk]
  speciality_id [name: "index_speciality_id"]
  doctor_id [name: "index_doctor_id"]
}
}

Table "user" {
  "id" Int [pk, not null, increment]
  "username" VarChar(255) [null, Note: "System field"]
  "normalized_username" VarChar(255) [null, Note: "System field"]
  "password_hash" VarChar(255) [not null, Note: 'Only salted HASH-es of a password should be stored']
  "email" VarChar(255) [not null]
  "normalized_email" VarChar(255) [null, Note: "System field"]
  "email_is_confirmed" Bool [not null, default: False, Note: "System field"]
  "first_name" VarChar(50) [not null, Note: 'Can be between 1-50 characters']
  "last_name" VarChar(50) [not null, Note: 'Can be between 1-50 characters']
  "phone_number" LongText [null, Note: "System field"]
  "phone_number_is_confirmed" Bool [not null, default: False, Note: "System field"]
  "two_factor_is_enabled" Bool [not null, default: False, Note: "System field"]
  "lockout_end" DateTime [not null, Note: "System field"]
  "lockout_is_enabled" Bool [null, default: False, Note: "System field"]
  "is_verified" Bool [not null, default: False]
  "security_stamp" LongText [null, Note: "System field"]
  "concurrency_stamp" LongText [null, Note: "System field"]
  "access_failed_count" Int [not null, Note: "System field"]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

  Note: "General information about all users in our app"
}

Table "user_view" {
  "id" Int [pk, not null, increment]
  "password_hash" VarChar(255) [not null, Note: 'Only salted HASH-es of a password should be stored']
  "email" VarChar(255) [not null]
  "is_verified" Bool [not null, default: False]

  Note: "Filtered users who are not deleted, for faster lookup on the user table"
}

Table "token" {
  "id" Int [pk, not null, increment]
  "user_id" Int [not null, Note: "Issuer user"]
  "type" LongText [not null]
  "value" LongText [not null, Note: "JSON Web Token"]
  "is_used" Bool [not null, default: False]
  "valid_until" DateTime [not null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

  NOTE: "System Table"
}

Table "user_role" {
  "user_id" Int [not null]
  "role_id" Int [not null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

  Note: "System Table"

  Indexes {
    (user_id, role_id) [pk]
    user_id [name: "index_user_id"]
    role_id [name: "index_role_id"]
  }
}

Table "role" {
  "id" Int [pk, not null, increment]
  "name" VarChar(255) [not null]
  "normalized_name" VarChar(255) [null]
  "concurrency_stamp" LongText [null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

  Note: "System Table"
}

Table "role_claim" {
  "id" Int [pk, not null, increment]
  "role_id" Int [not null]
  "claim_type" LongText [not null]
  "claim_value" LongText [not null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

    Note: "System Table"
}

Ref:"user"."id" < "user_role"."user_id" [update: cascade, delete: cascade]

Ref:"user"."id" < "token"."user_id" [update: cascade, delete: cascade]

Ref:"role"."id" < "user_role"."role_id" [update: cascade, delete: cascade]

Ref:"role"."id" < "role_claim"."role_id" [update: cascade, delete: cascade]


// from v10


Table "doctor" {
  "email" VarChar(255) [not null]
  "first_name" VarChar(50) [not null]
  "id" Int [pk, not null, increment]
  "last_name" VarChar(50) [not null]
  "login_password" VarChar(255) [not null]
  "phone" BigInt(0) [not null]
  "work_address" VarChar(255) [not null]
  "user_id" Int [not null]
  "user_name" VarChar(255) [not null]
  "picture_url" Text [default: NULL]
  "city_id" Int [not null]
  "country_id" Int [not null]
  "summary" Text [default: NULL]
  "qualification" Text [default: NULL]
  "experience_since" Year [not null]
  "education" Text [default: NULL]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

  Indexes {
    city_id [name: "index_city_id"]
    country_id [name: "index_country_id"]
  }
  Note: "Table is not finalized or present in the db"
}

Table "patient" {
  "id" Int [pk, not null, increment]
  "email" VarChar(255) [not null]
  "first_name" VarChar(50) [not null]
  "last_name" VarChar(50) [not null]
  "login_password" VarChar(255) [not null]
  "weight" Float [null, Note: "Weight in kg"]
  "height" Float [null, Note: "Height in cm"]
  "blood_pressure" VarChar(15) [null, Note: "Systolic/Diastolic format ddd/ddd eg. 120/80"]
  "blood_sugar" Float [null, Note: 'Blood sugar level In mmol/L']
  "city_id" Int [not null]
  "country_id" Int [not null]
  "user_id" Int [not null]
  "user_slug" VarChar(255) [not null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

Indexes {
  city_id [name: "index_city_id"]
  country_id [name: "index_country_id"]
}

  Note: "Table is not finalized or present in the db"
}

Table "patient_view" {
  "id" Int [pk, not null, increment]
  "email" VarChar(255) [not null]
  "first_name" VarChar(50) [not null]
  "last_name" VarChar(50) [not null]
  "login_password" VarChar(255) [not null]
  "weight" Float [null, Note: "Weight in kg"]
  "height" Float [null, Note: "Height in cm"]
  "blood_pressure" VarChar(15) [null, Note: "Systolic/Diastolic format ddd/ddd eg. 120/80"]
  "blood_sugar" Float [null, Note: 'Blood sugar level In mmol/L']
  "city_id" Int [not null]
  "country_id" Int [not null]
  "user_id" Int [not null]
  "user_slug" VarChar(255) [not null]

  Note: '''Table is not finalized or present in the db
  Filtered patients who are not deleted, for faster lookup on the patient table'''
}

Table "review" {
  "id" Int [pk, not null, increment]
  "patient_id" Int [not null]
  "doctor_id" Int [not null]
  "raiting" TinyInt(1) [not null, default: 1]
  "comment" Text [not null]
  "review_date" Text [not null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

Indexes {
  doctor_id [name: "index_doctor_id"]
  patient_id [name: "index_patient_id"]
}

  Note: "Table is not finalized or present in the db"
}

Table "appointment" {
  "id" Int [not null, increment]
  "doctor_id" Int [not null]
  "patient_id" Int [not null]
  "time_slot" DateTime [not null]
  "has_happened" TINYINT(1) [not null, default: 0]
  "notes" Text [not null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

Indexes {
  (id, patient_id, time_slot) [pk]
  patient_id [name: "index_patient_id"]
  time_slot [name: "index_time_slot"]
  doctor_id [name: "index_doctor_id"]
}

  Note: "Table is not finalized or present in the db"
}

Table "city" {
  "id" Int [pk, not null, increment]
  "name" VarChar(255) [not null]
  "country_id" Int [not null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

Indexes {
  country_id [name: "index_country_id"]
}

  Note: "Table is not finalized or present in the db"
}

Table "country" {
  "id" int [pk, not null, increment]
  "name" VARCHAR(255) [not null]
  "created_at" Timestamp [default: `CURRENT_TIMESTAMP`]
  "updated_at" Timestamp [default: NULL, Note: 'On update CURRENT_TIMESTAMP']
  "is_deleted" Bool [not null, default: False]

  Note: "Table is not finalized or present in the db"
}

Ref:"speciality"."id" < "specialist"."speciality_id" [update: cascade, delete: cascade]

Ref:"doctor"."id" < "specialist"."doctor_id" [update: cascade, delete: cascade]

Ref:"doctor"."id" < "review"."doctor_id" [update: cascade, delete: cascade]

Ref:"doctor"."id" < "appointment"."doctor_id" [update: cascade, delete: cascade]

Ref:"user"."id" < "doctor"."user_id" [update: cascade, delete: cascade]

Ref:"user"."id" < "patient"."user_id" [update: cascade, delete: cascade]

Ref:"city"."id" < "doctor"."city_id" [update: cascade, delete: no action]

Ref:"city"."id" < "patient"."city_id" [update: cascade, delete: no action]

Ref:"country"."id" < "city"."country_id" [update: cascade, delete: no action]

Ref:"country"."id" < "doctor"."country_id" [update: cascade, delete: no action]

Ref:"country"."id" < "patient"."country_id" [update: cascade, delete: no action]

Ref:"patient"."id" < "appointment"."patient_id" [update: cascade, delete: no action]

Ref:"patient"."id" < "review"."patient_id" [update: cascade, delete: no action]